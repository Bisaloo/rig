// -*- mode: rust -*-

// ------------------------------------------------------------------------
// Windows help
// ------------------------------------------------------------------------

const HELP_ABOUT: &str = r#""#;

const HELP_EXAMPLES: &str = r#"EXAMPLES:
    # Add the latest development snapshot
    rig add devel

    # Add the latest release
    rig add release

    # Install specific version
    rig add 4.1.2

    # Install latest version within a minor branch
    rig add 4.1

    # List installed versions
    rig list

    # Set default version
    rig default 4.1.2
"#;

const HELP_RESOLVE: &str = r#"
DESCRIPTION:
    Resolve R versions. Check the version number of an R version (e.g.
    release, devel, etc.), and looks up the URL of the installer for it,
    if an installer is available.

    It prints the R version number, and after a space the URL of the
    installer. If no installer is available for this R version and the
    current platform, the URL is `NA`.

    An R version can be specified in various ways:
    - `rig resolve devel` is the latest available development version,
    - `rig resolve next` is the next (patched, alpha, beta, etc.) version,
    - `rig resolve release` is the latest release.
    - `rig resolve x.y.z` is a specific version.
    - `rig resolve x.y` is the latest release within the `x.y` minor branch.
    - `rig resolve oldrel/n` is the latest release within the `n`th previous
      minor branch (`oldrel` is the same as `oldrel/1`).
"#;

const HELP_RESOLVE_EXAMPLES: &str = r#"EXAMPLES:
    # Latest development snapshot
    rig resolve devel

    # Latest release (that has an installer available)
    rig resolve release

    # URL for a specific version
    rig resolve 4.1.2

    # Latest version within a minor branch
    rig resolve 4.1
"#;

const HELP_DEFAULT: &str = r#"
DESCRIPTION
    Print or set the default R version. The default R version is the one
    that can be started with the `R` and `RS` commands, via quick
    batch files at `C:\Program Files\R\bin`.

    Call without any arguments to see the current default. Call with the
    version number/name to set the default. Before setting a default, you
    can call `rig list` to see the installed R versions.

    Potentially you need to run this command from an admininstrator shell
    to change the current default.

    You don't need to update the default R version to just run a non-default R
    version. You can use the `R-<ver>` links, see `rig system make-links`.

    `rig switch` is an alias of `rig default`.

KNOWN ISSUE:
    - If you delete the default R version with `rig rm` or another way,
      then the `R` and `RS` commands will kept, but they will point to a
      non-existing directory and fail.
"#;

const HELP_DEFAULT_EXAMPLES: &str = r#"EXAMPLES:
    # Query default R version
    rig default

    # Set the default version
    rig default 4.1
"#;

const HELP_LIST: &str = r#"
DESCRIPTION
    List installed R versions at `C:\Program Files\R`.
    It does _not_ check if they are working properly.

    `rig ls` is an alias.
"#;

const HELP_ADD: &str = r#"
DESCRIPTION
    Download and install an R version, from the official sources.
    It keeps the already installed R versions.

    The desired R version can be specified in various ways:
    - `rig add devel` adds the latest available development version,
    - `rig add next` is the next version (patched, alpha, beta, rc, etc.),
    - `rig add release` adds the latest release.
    - `rig add x.y.z` adds a specific version.
    - `rig add x.y` adds the latest release within the `x.y` minor branch.
    - `rig add oldrel/n` adds the latest release within the `n`th previous
      minor branch (`oldrel` is the same as `oldrel/1`).
    - `rig add <url>` uses a `.pkg` installer from `<url>`.

    `rig add` will call the following rig command after the installation,
    to set up the newly installed version:
    - `rig system create-lib`
    - `rig system make-links`
    See their help pages for details.

    It will also update the sytem profile of all installed versions to add
    the appropriate versions of Rtools to the system PATH.

    You can use `rig add` to install Rtools:

    rig add rtools

    will install all Rtools versions that are needed for the currently
    installed R versions. You can also request a specific Rtools version,
    e.g. `rig add rtools40`. Rtools versions 3.x all install to `C:\Rtools`,
    so only one of them can be installed at a time.

    You need an administrator account to run this command.

KNOWN ISSUE:
    - Rtools installation will fail if the same version of Rtools is
      already installed.
"#;

const HELP_ADD_EXAMPLES: &str = r#"EXAMPLES
    # Add the latest development snapshot
    rig add devel

    # Add the latest release
    rig add release

    # Install specific version
    rig add 4.1.2

    # Install latest version within a minor branch
    rig add 4.1

    # Install all needed Rtools versions
    rig add rtools
"#;

const HELP_RM: &str = r#"
DESCRIPTION
    Remove an R installation. It keeps the users' package libraries.

    You need an administrator account to run this command.
"#;

const HELP_SYSTEM: &str = r#"
DESCRIPTION
    Various commands to modify and configure the installed R versions.
    See their help pages for details. E.g. run `rig system make-links --help`.
"#;

const HELP_SYSTEM_LINKS: &str = r#"
DESCRIPTION
    Create quick links in `C:\Program Files\R\bin` for the current R
    installations. This lets you directly run a specific R version. E.g.
     `R-4.1.2` will start R 4.1.2.

    It also adds an `R` and `RS` link that runs the default R version.
    See `rig default`.

    `rig add` runs `rig system make-links`, so if you only use rig to
    install R, then you do not need to run it manually.

    You need an administrator account to run this command.
"#;

const HELP_SYSTEM_ADDPAK: &str = r#"
DESCRIPTION
    Install/update pak for one or more R versions.

    * If `--all` is specified, then it installs pak for all current R
      installations.
    * If one or more R versions are specified, then it installs pak for
      those.
    * If no R versions are specified, then it installs pak for the default
      R installation, if there is one (see `rig default`).
"#;

const HELP_SYSTEM_CLEANREG: &str = r#"
DESCRIPTION
    Remove R and Rtools entries from the registry, if the corresponding
    R or Rtools versions are not installed any more.
"#;

const HELP_SYSTEM_UPDATE_RTOOLS40: &str = r#"
DESCRIPTION
    Update Rtools40 compilers and libraries to the latest builds by
    updating the MSYS2 packages in Rtools40.
"#;

const HELP_RSTUDIO: &str = r#"
DESCRIPTION:
    Start RStudio with the specified R version.

    Note that you need to set the default R version in RStudio to
    "Use your machine's default version", either 64 bit (recommended) or
    32 bit. This setting is in Tools -> Global Options -> Basic ->
    General -> R version.

EXAMPLES:
    # With default R version
    rig rstudio

    # With another R version
    rig rstudio 4.0.5

    # Open project with default R version
    rig rstudio cli\cli.Rproj

    # Open renv project with the R version specified in the lock file
    rig rstudio projects\myproject\renv.lock

    # Open RStudio project with specified R version, either is good
    rig rstudio 4.0.5 cli.Rproj
    rig rstudio cli.Rproj 4.0.5
"#;
